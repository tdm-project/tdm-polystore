#!/bin/bash

set -o errexit
set -o nounset
set -o pipefail

# Set this to anything other than true to avoid having the images
# pushed to dockerhub
DoPush="${DoPush:-true}"

ImageOwner="tdmproject"
Images=(tdmq-client-conda tdmq-client tdmq tdmqj tdmq-db tdmqj-hub)
my_name="$(basename "$0" .sh)"


function log() {
  printf "%s [ %s ] -- %s\n" "$(date "+%Y-%m-%d %H:%M:%S")" "${my_name}" "$*" >&2
}


########### main ###############

log "Running for TRAVIS_EVENT_TYPE ${TRAVIS_EVENT_TYPE:-empty}"

if [[ "${DoPush}" != "true" ]]; then
  log "Push disabled by DoPush=${DoPush}"
  exit 0
fi

if [[ "${TRAVIS_EVENT_TYPE:-}" != "push" ]]; then
  log "TRAVIS_EVENT_TYPE is '${TRAVIS_EVENT_TYPE:-}'.  Quitting."
  exit 0
fi

case "${TRAVIS_BRANCH}" in
  develop)
    tag="dev-${TRAVIS_BUILD_NUMBER}"
    ;;
  master)
    tag="${TRAVIS_BUILD_NUMBER}"
    ;;
  *)
    log "Running for ignored branch ${TRAVIS_BRANCH}.  Quitting."
    exit 0
    ;;
esac

log "Computed tag '${tag}'"

log "Logging into dockerhub"
if [[ -z "${DOCKER_PASSWORD:-}" || -z "${DOCKER_USERNAME:-}" ]]; then
  log "Docker credentials not set in environment.  Can't push!"
  exit 2
fi
echo -n "${DOCKER_PASSWORD}" | docker login -u "${DOCKER_USERNAME}" --password-stdin

for image in "${Images[@]}"; do
  ImageSlug="${ImageOwner}/${image}"
  FullImageName="${ImageSlug}:${tag}"

  log "Tagging tdmq image ${ImageSlug} as ${FullImageName}"
  # ImageSlug used here must match the image tag set by the
  # docker build command in the Makefile
  docker tag "${ImageSlug}" "${FullImageName}"

  log "Pushing ${FullImageName} to dockerhub"
  docker push "${FullImageName}"
done

log "Finished"

# vim: set et sw=2
