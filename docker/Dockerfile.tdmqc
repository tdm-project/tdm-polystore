
# This dockerfile performs a pip-based installation of the tdmq client
# and its requirements.  By default, it uses the crs4/hadoopclient image
# and builds an HDFS-capable client.  You can also specify an alternative
# Debian-derived image to use as a base image.


# You can build an image without the hadoop client by providing a
# different base image.
ARG BASE_IMAGE=hadoop-base

# This stage creates a base image for the tdmq client that includes the
# Hadoop client libraries.  It basically performs minimal customization
# of the crs4/hadoopclient image.
ARG HADOOP_BASE_IMAGE=crs4/hadoopclient:3.2.0
FROM $HADOOP_BASE_IMAGE AS hadoop-base

ARG HADOOP_CLASSPATH
ENV CLASSPATH="$HADOOP_CLASSPATH" \
    HADOOP_HOME="/opt/hadoop" \
    HADOOP_LOG_DIR="/tmp/hadoop_logs" \
    LANG=C.UTF-8

# TileDB doesn't seem to pass HADOOP_LOG_DIR to libhdfs, so we have trouble
# overriding some default settings.  The sed command below comments out the
# fairscheduler statedump logger since it insists on trying to create a log
# file in the PWD (and, as clients, we don't care about that log file).
RUN echo "export HADOOP_HOME=${HADOOP_HOME}" >> /etc/profile.d/hadoop.sh \
 && echo "export HADOOP_LOG_DIR=${HADOOP_LOG_DIR}" >> /etc/profile.d/hadoop.sh \
 && echo "export HADOOP_CLASSPATH=$(hadoop classpath --glob)" >> /etc/profile.d/hadoop.sh \
 && echo 'export CLASSPATH=${CLASSPATH}:${HADOOP_CLASSPATH}' >> /etc/profile.d/hadoop.sh \
 && sed -i -e 's|^ *log4j.appender.FSLOGGER.File=.*fairscheduler-statedump.log|#&|' "${HADOOP_HOME}/etc/hadoop/log4j.properties" \
 && echo  /usr/lib/jvm/jre/lib/amd64/server > /etc/ld.so.conf.d/jvm.conf \
 && chmod a+r /etc/profile.d/hadoop.sh /etc/ld.so.conf.d/jvm.conf \
 && ldconfig \
 && chmod a+w -R /opt/hadoop/etc/hadoop/


FROM $BASE_IMAGE AS tdmq-client

USER root
ARG PIP_BIN=pip3
ENV PIP=$PIP_BIN

ENV TDMQ_DIST=/tdmq-dist
ENV DATA_DIR="${TDMQ_DIST}/data"

RUN apt-get update -q \
 && DEBIAN_FRONTEND=noninteractive \
    apt-get install -y --no-install-recommends \
        libnss-wrapper \
        python3-pip \
 && apt-get clean -y

COPY --chown=root ./tdmq-dist/tdmq/requirements-client.txt "${TDMQ_DIST}/tdmq/"
# The Python tiledb package is called tiledb-py in conda and tiledb on pypi.
# We fix the name on-the-fly with sed with a quick process substitution (which
# requires bash).
RUN /bin/bash -c "$PIP install --no-cache-dir -r <(sed -e 's/tiledb-py/tiledb/' "${TDMQ_DIST}/tdmq/requirements-client.txt")"

COPY --chown=root tdmq_scripts.sh /usr/local/lib/
COPY --chown=root fake_user.sh tdmqc_run_tests /usr/local/bin/
RUN chmod 644 /usr/local/lib/tdmq_scripts.sh \
 && chmod 755 /usr/local/bin/*


COPY --chown=root ./tdmq-dist "${TDMQ_DIST}"
RUN cd "${TDMQ_DIST}" \
 && find . -type f -print0 | xargs -0 chmod a+r \
 && find . -type d -print0 | xargs -0 chmod a+rx

RUN cd "${TDMQ_DIST}" && $PIP install .

#################################################
FROM tdmq-client AS tdmqc

RUN $PIP install --no-cache-dir -r "${TDMQ_DIST}/tdmq/requirements-server.txt"
RUN $PIP install --no-cache-dir \
        pytest==6.1 \
        pytest-flask==1.1 \
        s3cmd==2.1

ENTRYPOINT [ "/entrypoint.sh", "/usr/local/bin/tdmqc-entrypoint.sh" ]

COPY --chown=root tdmqc-entrypoint.sh /usr/local/bin/
RUN chmod 755 /usr/local/bin/tdmqc-entrypoint.sh

RUN useradd -m -s /bin/bash -d /home/tdm tdm
USER tdm
WORKDIR "${TDMQ_DIST}"
