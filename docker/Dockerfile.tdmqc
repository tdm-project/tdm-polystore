ARG BASE_IMAGE=tdmproject/tiledb:0.6.6-3.6
FROM $BASE_IMAGE AS deps

ARG PIP_BIN=pip3
ENV PIP=$PIP_BIN

ARG HADOOP_HOME=/opt/hadoop

USER root

ENV TDMQ_DIST=/tdmq-dist

RUN apt-get update -q \
 && DEBIAN_FRONTEND=noninteractive \
    apt-get install -y --no-install-recommends \
        libnss-wrapper \
        python3-sqlalchemy-ext \
 && apt-get clean -y

# setuptools must be installed before some of the other client requirements
RUN $PIP install --no-cache-dir setuptools
COPY --chown=root ./tdmq-dist/tdmq/requirements-client.txt "${TDMQ_DIST}/tdmq/"
RUN $PIP install --no-cache-dir -r "${TDMQ_DIST}/tdmq/requirements-client.txt"

ENV DATA_DIR="${TDMQ_DIST}/data" \
    HADOOP_LOG_DIR="/tmp/hadoop_logs" \
    LANG=C.UTF-8

# TileDB doesn't seem to pass HADOOP_LOG_DIR to libhdfs, so we have trouble
# overriding some default settings.  The sed command below comments out the
# fairscheduler statedump logger since it insists on trying to create a log
# file in the PWD (and, as clients, we don't care about that log file).
RUN echo "export HADOOP_HOME=${HADOOP_HOME}" >> /etc/profile.d/hadoop.sh \
 && echo "export HADOOP_LOG_DIR=${HADOOP_LOG_DIR}" >> /etc/profile.d/hadoop.sh \
 && echo "export HADOOP_CLASSPATH=$(hadoop classpath --glob)" >> /etc/profile.d/hadoop.sh \
 && echo 'export CLASSPATH=${CLASSPATH}:${HADOOP_CLASSPATH}' >> /etc/profile.d/hadoop.sh \
 && sed -i -e 's|^ *log4j.appender.FSLOGGER.File=.*fairscheduler-statedump.log|#&|' "${HADOOP_HOME}/etc/hadoop/log4j.properties" \
 && echo  /usr/lib/jvm/jre/lib/amd64/server > /etc/ld.so.conf.d/jvm.conf \
 && chmod a+r /etc/profile.d/hadoop.sh /etc/ld.so.conf.d/jvm.conf \
 && ldconfig


COPY --chown=root tdmq_scripts.sh /usr/local/lib/
COPY --chown=root fake_user.sh tdmqc_run_tests /usr/local/bin/
RUN chmod 644 /usr/local/lib/tdmq_scripts.sh \
 && chmod 755 /usr/local/bin/* \
 && chmod a+w -R /opt/hadoop/etc/hadoop/


#################################################
FROM deps AS tdmq-client

COPY --chown=root ./tdmq-dist "${TDMQ_DIST}"
WORKDIR "${TDMQ_DIST}"
RUN cd "${TDMQ_DIST}" \
 && find . -type f -print0 | xargs -0 chmod a+r \
 && find . -type d -print0 | xargs -0 chmod a+rx \
 && $PIP install --no-cache-dir -r tdmq/requirements-client.txt \
 && $PIP install .


#################################################
FROM tdmq-client AS tdmqc

RUN $PIP install --no-cache-dir -r "${TDMQ_DIST}/tdmq/requirements-server.txt"
RUN $PIP install --no-cache-dir \
        pytest==6.1 \
        pytest-flask==1.1 \
        s3cmd==2.1

ENTRYPOINT [ "/entrypoint.sh", "/usr/local/bin/tdmqc-entrypoint.sh" ]

COPY --chown=root tdmqc-entrypoint.sh /usr/local/bin/
RUN chmod 755 /usr/local/bin/tdmqc-entrypoint.sh
